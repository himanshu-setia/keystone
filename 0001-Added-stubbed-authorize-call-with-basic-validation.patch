From ec72ff8cb9f1e2b3dde71a692f8cd1d5708efdb1 Mon Sep 17 00:00:00 2001
From: Ajaya Agrawal <ajku.agr@gmail.com>
Date: Wed, 18 Nov 2015 10:55:59 +0000
Subject: [PATCH] Added stubbed authorize call with basic validation

---
 keystone/auth/controllers.py        | 18 ++++++++++++++++++
 keystone/auth/routers.py            |  6 ++++++
 keystone/contrib/ec2/controllers.py | 12 ++++++++++++
 3 files changed, 36 insertions(+)

diff --git a/keystone/auth/controllers.py b/keystone/auth/controllers.py
index 065f1f0..d941fe3 100644
--- a/keystone/auth/controllers.py
+++ b/keystone/auth/controllers.py
@@ -537,6 +537,24 @@ class Auth(controller.V3Controller):
             del token_data['token']['catalog']
         return render_token_data_response(token_id, token_data)
 
+    def validate_token_with_action_resource(self, context):
+        query_string = context.get('query_string', None)
+        if not query_string:
+            raise exception.ValidationError(attribute="action and resource",
+                                            target="query_string")
+        else:
+            action = query_string.pop('action', None)
+            if action is None:
+                raise exception.ValidationError(attribute="action",
+                                                target="query_string")
+            resource = query_string.get('resource', None)
+            if resource is None:
+                raise exception.ValidationError(attribute="resource",
+                                                target="query_string")
+            if action == 'deny':
+                raise exception.Forbidden(message='Policy does not allow to perform this action')
+            return self.validate_token(context)
+
     @controller.protected()
     def revocation_list(self, context, auth=None):
         if not CONF.token.revoke_by_id:
diff --git a/keystone/auth/routers.py b/keystone/auth/routers.py
index c7a525c..975cc22 100644
--- a/keystone/auth/routers.py
+++ b/keystone/auth/routers.py
@@ -33,6 +33,12 @@ class Routers(wsgi.RoutersBase):
 
         self._add_resource(
             mapper, auth_controller,
+            path='/authorize',
+            get_action='validate_token_with_action_resource',
+            rel=json_home.build_v3_resource_relation('auth_tokens'))
+
+        self._add_resource(
+            mapper, auth_controller,
             path='/auth/tokens/OS-PKI/revoked',
             get_action='revocation_list',
             rel=json_home.build_v3_extension_resource_relation(
diff --git a/keystone/contrib/ec2/controllers.py b/keystone/contrib/ec2/controllers.py
index 1f35e56..3760305 100644
--- a/keystone/contrib/ec2/controllers.py
+++ b/keystone/contrib/ec2/controllers.py
@@ -265,6 +265,18 @@ class Ec2Controller(Ec2ControllerCommon, controller.V2Controller):
 
     @controller.v2_deprecated
     def authenticate(self, context, credentials=None, ec2Credentials=None):
+        query_string = context.pop('query_string', None)
+        if query_string is not None:
+            action = query_string.pop('action', None)
+            if action is None:
+                raise exception.ValidationError(attribute='action',
+                                                target='query_string')
+            resource = query_string.pop('resource', None)
+            if resource is None:
+                raise exception.ValidationError(attribute='resource',
+                                                target='query_string')
+            if action == 'deny':
+                raise exception.Forbidden(message='Policy does not allow to perform this action')
         (user_ref, tenant_ref, metadata_ref, roles_ref,
          catalog_ref) = self._authenticate(credentials=credentials,
                                            ec2credentials=ec2Credentials)
-- 
1.9.1

